@page "/GetPlugins"
@using System.Net.Http.Json;
@using System.Text.Json;
@using SRTPluginBase;
@using SRTPluginBase.Implementations;
@inject NavigationManager NavigationManager;
@inject IHttpClientFactory httpClientFactory;
<PageTitle>Get Plugins</PageTitle>

<div class="w-full h-full">
    @if (pluginHost is null || MainJson is null || ManifestHostEntries is null || ManifestPluginEntries is null)
    {
        <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
    }
    else
    {
        <MudPaper Class="w-full h-full flex-col gap-4 rounded-none">
            <PageHeader>
                <MudText Typo="Typo.h5">Get Hosts</MudText>
            </PageHeader>
            @foreach (IMainHostEntry mainHostEntry in ManifestHostEntries!)
            {
                <PluginBar>
                    <PluginHeader>
                        <PluginTitle>@mainHostEntry.DisplayName</PluginTitle>
                        @mainHostEntry.Name
                    </PluginHeader>
                    <MudButtonGroup Color="Color.Secondary" Variant="Variant.Filled">
                            <MudButton Href="@mainHostEntry.RepoURL.ToString()">
                                Visit Website
                            </MudButton>
                    </MudButtonGroup>
                </PluginBar>
            }

            <PageHeader>
                <MudText Typo="Typo.h5">Get Plugins</MudText>
            </PageHeader>
            @foreach (IMainPluginEntry mainPluginEntry in ManifestPluginEntries!.Values)
            {
                <PluginBar>
                    <PluginHeader>
                        <PluginTitle>@mainPluginEntry.DisplayName</PluginTitle>
                        @mainPluginEntry.Name<br />
                        (@mainPluginEntry.Platform.ToString()) @mainPluginEntry.Type.ToString()
                    </PluginHeader>
                    <MudButtonGroup Color="Color.Secondary" Variant="Variant.Filled">
                        @if (pluginHost.LoadedPlugins.ContainsKey(mainPluginEntry.Name))
                        {
                            <MudButton Href="@GetPluginName(@mainPluginEntry.Name, "Reload")">
                                Reload
                            </MudButton>
                        }
                        else
                        {
                            <MudButton Href="@GetPluginName(@mainPluginEntry.Name, "Load")">
                                Load
                            </MudButton>
                        }
                    </MudButtonGroup>
                </PluginBar>
            }
        </MudPaper>
    }
</div>

@code {
    private string GetPluginName(string name, string page) => $"api/v1/Plugin/{name}/{page}";
    // private string GetItemCssClass(int index) => index % 2 == 0 ? "even" : "odd";

    private IMainJson? MainJson { get; set; }
    private IList<IMainHostEntry>? ManifestHostEntries { get; set; }
    private IDictionary<string, IMainPluginEntry>? ManifestPluginEntries { get; set; }
    protected override async Task OnInitializedAsync()
    {
        using (HttpClient httpClient = httpClientFactory.CreateClient().ConfigureHttpClient(new Uri(NavigationManager.BaseUri)))
        {
            MainJson = await httpClient.GetFromJsonAsync<MainJson>("https://raw.githubusercontent.com/SpeedRunTool/SRTPlugins/main/manifest.json", System.Text.Json.JsonSerializerOptions.Default);
            ManifestHostEntries = MainJson?.Hosts.Cast<IMainHostEntry>().ToList();
            ManifestPluginEntries = MainJson?.Plugins.Cast<IMainPluginEntry>().ToDictionary(kvp => kvp.Name, (kvp) => kvp);
        }

        await base.OnInitializedAsync();
    }
}