@page "/Debug"
<PageTitle>Debug</PageTitle>


<div class="w-full h-full">
    <MudPaper Class="w-full h-full flex-col gap-4 rounded-none">
        <MudToolBar>
            <MudText Typo="Typo.h5">Debug</MudText>
            <MudSpacer />
            <MudButtonGroup Color="Color.Secondary" Variant="Variant.Filled">
                <MudButton Href="api/v1/Plugin" Target="_blank">
                    Loaded Plugins
                </MudButton>
                <MudButton Href="api/v1/Debug/GenerateMainJson" Target="_blank">
                    Debug Main
                </MudButton>
                <MudButton Href="api/v1/Debug/GenerateManifestHost" Target="_blank">
                    Debug Manifest Host
                </MudButton>
            </MudButtonGroup>
        </MudToolBar>
        @foreach ((PluginStateValue<IPlugin> pluginStateValue, int index) in pluginHost.LoadedPlugins.Values.Select((psv, i) => (psv, i)))
        {
            <MudToolBar>
                <div class="w-full flex flex-wrap justify-between items-center px-6 py-2 gap-1">
                    <div class="flex items-center gap-4">
                        <MudAvatar Color="@GetRunningStatusColor(pluginStateValue)" Variant="Variant.Filled">
                            <MudIcon Color="Color.Dark" Icon="@GetRunningStatusIcon(pluginStateValue)" />
                        </MudAvatar>
                        <div class="flex justify-center items-center font-bold">@pluginStateValue.PluginType.Name</div>
                    </div>
                    <MudButtonGroup Color="Color.Secondary" Variant="Variant.Filled">
                        <MudButton Href="@GetPluginName(@pluginStateValue.PluginType.Name, "Info")"
                                   Target="_blank">
                            Info
                        </MudButton>
                        @if (pluginStateValue.Plugin! is IPluginProducer)
                        {
                            <MudButton Href="@GetPluginName(@pluginStateValue.PluginType.Name, "Data")"
                                       Target="_blank">
                                Data
                            </MudButton>
                        }
                        <MudButton Href="@GetPluginName(@pluginStateValue.PluginType.Name, "GenerateManifest")"
                                   Target="_blank">
                            Generate Manifest
                        </MudButton>
                    </MudButtonGroup>
                </div>
            </MudToolBar>
        }
    </MudPaper>
</div>

@code {
    private string GetPluginName(string name, string page) => $"api/v1/Plugin/{name}/{page}";
    // TODO REFACTOR TO USE ENUM LATER
    private string GetRunningStatusIcon(PluginStateValue<IPlugin> pluginStateValue) => pluginStateValue.IsInstantiated ? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Warning;
    private Color GetRunningStatusColor(PluginStateValue<IPlugin> pluginStateValue) => pluginStateValue.IsInstantiated ? Color.Success : Color.Warning;
    // private string GetItemCssClass(int index) => index % 2 == 0 ? "even" : "odd";
    // public enum PluginStatusEnum : int
    // {
    // NotLoaded = 0, // Icons.Material.Filled.Warning Color.Warning
    // Loaded = 1, // Icons.Material.Filled.Folder Color.Success
    // Instantiated = 2, // Icons.Material.Filled.CheckCircle Color.Success
    // LoadingError = 3, // Icons.Material.Filled.FolderOff Color.Error
    // InstantiationError = 4, // Icons.Material.Filled.Dangerous Color.Error
    // }
}