@page "/"
<PageTitle>Home</PageTitle>

<div class="w-full h-full">
    @if (pluginHost == null)
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
    else
    {
        <MudPaper Class="w-full h-full flex-col gap-4 rounded-none">
            <MudToolBar>
                <h3>Plugins</h3>
                <MudSpacer />
                <MudButton 
                    Color="Color.Primary"
                    Variant="Variant.Filled"
                    Href="api/v1/Plugin/ReloadAll"
                    Target="_blank"
                >
                    Reload Plugins
                </MudButton>
            </MudToolBar>
                @foreach ((PluginStateValue<IPlugin> pluginStateValue, int index) in pluginHost.LoadedPlugins.Values.Select((psv, i) => (psv, i)))
                {
                    <div class="w-full flex flex-wrap justify-between items-center px-6 py-2 gap-1">
                        <div class="flex items-center gap-4">
                            <MudAvatar Color="@GetRunningStatusColor(pluginStateValue)" Variant="Variant.Outlined">
                                <MudIcon Icon="@GetRunningStatusIcon(pluginStateValue)" />
                            </MudAvatar>
                            <div class="flex justify-center items-center font-bold">@pluginStateValue.PluginType.Name</div>
                        </div>
                        <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                            <MudButton Href="@GetPluginName(@pluginStateValue.PluginType.Name, "Reload")"
                                       Target="_blank">
                                Reload
                            </MudButton>
                            @foreach (string registeredPage in (pluginStateValue.Plugin?.RegisteredPages.Keys ?? Enumerable.Empty<RegisteredPagesKey>()).Where((RegisteredPagesKey registeredPagesKey) => !registeredPagesKey.Hidden))
                            {
                                <MudButton Href="@GetPluginName(@pluginStateValue.PluginType.Name, @registeredPage)"
                                           Target="_blank">
                                    @registeredPage
                                </MudButton>
                            }
                        </MudButtonGroup>
                    </div>
                }
        </MudPaper>
    }
</div>

@code {
    private string GetPluginName(string name, string page) => $"api/v1/Plugin/{name}/{page}";
    private string GetRunningStatusIcon(PluginStateValue<IPlugin> pluginStateValue) => pluginStateValue.IsInstantiated ? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Warning;
    private Color GetRunningStatusColor(PluginStateValue<IPlugin> pluginStateValue) => pluginStateValue.IsInstantiated ? Color.Success : Color.Warning;
}