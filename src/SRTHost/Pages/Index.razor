@page "/"
<PageTitle>Home</PageTitle>
<h3>Plugins</h3>

<div>
    @if (pluginHost == null)
    {
        <em>Loading...</em>
    }
    else
    {
        <div class="btn-group btn-group-gap mb-8">
            <span><a href="api/v1/Plugin/Reload" class="btn btn-primary btn-custom-width" rel="noreferrer" target="_blank"><b>Reload Plugins</b></a></span>
        </div>
        @foreach ((IPluginStateValue<IPlugin> pluginStateValue, int index) in pluginHost.LoadedPlugins.Values.Where(psv => psv.IsInstantiated && psv.Plugin is not null).Select((psv, i) => (psv, i)))
        {
            <div class="@GetItemCssClass(index) w-100 d-flex flex-wrap justify-content-between align-items-center p-2 gap-1">
                <b>@pluginStateValue.Plugin!.TypeName</b>
                <div class="d-flex flex-wrap gap-2">
                    <a href="api/v1/Plugin/@pluginStateValue.Plugin!.TypeName/Reload" class="btn btn-primary btn-custom-width" rel="noreferrer" target="_blank">Reload</a>
                    @foreach (string registeredPage in pluginStateValue.Plugin!.RegisteredPages.Keys.Where((RegisteredPagesKey registeredPagesKey) => !registeredPagesKey.Hidden))
                    {
                        <a href="api/v1/Plugin/@pluginStateValue.Plugin!.TypeName/@registeredPage" class="btn btn-primary btn-custom-width" rel="noreferrer" target="_blank">@registeredPage</a>
                    }
                </div>
            </div>
        }
    }
</div>

@code {
    private string GetItemCssClass(int index) => index % 2 == 0 ? "even" : "odd";
}